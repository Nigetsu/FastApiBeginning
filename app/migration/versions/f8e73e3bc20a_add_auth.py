"""Add auth

Revision ID: f8e73e3bc20a
Revises: 8798f9d5664a
Create Date: 2025-03-16 02:39:10.606035

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'f8e73e3bc20a'
down_revision: Union[str, None] = '8798f9d5664a'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('cultivators',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('phone_number', sa.String(), nullable=False),
    sa.Column('first_name', sa.String(), nullable=False),
    sa.Column('last_name', sa.String(), nullable=False),
    sa.Column('date_of_birth', sa.Date(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('address', sa.Text(), nullable=False),
    sa.Column('rank_id', sa.Integer(), nullable=False),
    sa.Column('position_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['position_id'], ['positions.id'], ),
    sa.ForeignKeyConstraint(['rank_id'], ['ranks.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('phone_number')
    )
    op.add_column('ranks', sa.Column('count_cultivators', sa.Integer(), server_default=sa.text('0'), nullable=False))
    op.drop_column('ranks', 'count_users')
    op.add_column('users', sa.Column('password', sa.String(), nullable=False))
    op.add_column('users', sa.Column('is_user', sa.Boolean(), server_default=sa.text('true'), nullable=False))
    op.add_column('users', sa.Column('is_cultivator', sa.Boolean(), server_default=sa.text('false'), nullable=False))
    op.add_column('users', sa.Column('is_teacher', sa.Boolean(), server_default=sa.text('false'), nullable=False))
    op.add_column('users', sa.Column('is_admin', sa.Boolean(), server_default=sa.text('false'), nullable=False))
    op.add_column('users', sa.Column('is_super_admin', sa.Boolean(), server_default=sa.text('false'), nullable=False))
    op.drop_constraint('users_position_id_fkey', 'users', type_='foreignkey')
    op.drop_constraint('users_rank_id_fkey', 'users', type_='foreignkey')
    op.drop_column('users', 'date_of_birth')
    op.drop_column('users', 'address')
    op.drop_column('users', 'rank_id')
    op.drop_column('users', 'position_id')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('position_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('users', sa.Column('rank_id', sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('users', sa.Column('address', sa.TEXT(), autoincrement=False, nullable=False))
    op.add_column('users', sa.Column('date_of_birth', sa.DATE(), autoincrement=False, nullable=False))
    op.create_foreign_key('users_rank_id_fkey', 'users', 'ranks', ['rank_id'], ['id'])
    op.create_foreign_key('users_position_id_fkey', 'users', 'positions', ['position_id'], ['id'])
    op.drop_column('users', 'is_super_admin')
    op.drop_column('users', 'is_admin')
    op.drop_column('users', 'is_teacher')
    op.drop_column('users', 'is_cultivator')
    op.drop_column('users', 'is_user')
    op.drop_column('users', 'password')
    op.add_column('ranks', sa.Column('count_users', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False))
    op.drop_column('ranks', 'count_cultivators')
    op.drop_table('cultivators')
    # ### end Alembic commands ###
